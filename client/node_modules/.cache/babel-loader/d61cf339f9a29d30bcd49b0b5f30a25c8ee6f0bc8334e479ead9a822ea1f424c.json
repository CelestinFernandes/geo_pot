{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CELESTIN\\\\Desktop\\\\geotr\\\\geo_pot\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport MapComponent from \"./components/MapComponent\";\nimport CameraComponent from \"./components/CameraComponent\";\nimport PhotoGallery from \"./components/PhotoGallery\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [capturedPhotos, setCapturedPhotos] = useState([]);\n  const mapRef = useRef(null);\n  const handlePhotoCapture = (photoData, location) => {\n    const newPhoto = {\n      id: Date.now(),\n      image: photoData,\n      location,\n      timestamp: new Date().toLocaleString()\n    };\n    setCapturedPhotos(prev => [...prev, newPhoto]);\n\n    // Focus on new location\n    if (mapRef.current && location) {\n      mapRef.current.flyToLocation(location);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: /*#__PURE__*/_jsxDEV(MapComponent, {\n        ref: mapRef,\n        capturedPhotos: capturedPhotos,\n        onDeleteLastPhoto: () => setCapturedPhotos(prev => prev.slice(0, -1)),\n        onDeletePhoto: photoId => setCapturedPhotos(prev => prev.filter(photo => photo.id !== photoId))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Capture Location & Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take a photo to mark your current location on the map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraComponent, {\n        onPhotoCapture: handlePhotoCapture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhotoGallery, {\n        photos: capturedPhotos,\n        onDeletePhoto: photoId => setCapturedPhotos(prev => prev.filter(photo => photo.id !== photoId))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sTogp7WcSmd5iJAT4nJRFf8wDlw=\");\n_c = App;\nexport default Ap;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","MapComponent","CameraComponent","PhotoGallery","jsxDEV","_jsxDEV","App","capturedPhotos","setCapturedPhotos","mapRef","handlePhotoCapture","photoData","location","newPhoto","id","Date","now","image","timestamp","toLocaleString","prev","current","flyToLocation","className","children","ref","onDeleteLastPhoto","slice","onDeletePhoto","photoId","filter","photo","fileName","lineNumber","columnNumber","onPhotoCapture","photos","_c","Ap","$RefreshReg$"],"sources":["C:/Users/CELESTIN/Desktop/geotr/geo_pot/client/src/App.js"],"sourcesContent":["\"use client\"\r\nimport { useState, useRef } from \"react\"\r\nimport MapComponent from \"./components/MapComponent\"\r\nimport CameraComponent from \"./components/CameraComponent\"\r\nimport PhotoGallery from \"./components/PhotoGallery\"\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  const [capturedPhotos, setCapturedPhotos] = useState([])\r\n  const mapRef = useRef(null)\r\n\r\n  const handlePhotoCapture = (photoData, location) => {\r\n    const newPhoto = {\r\n      id: Date.now(),\r\n      image: photoData,\r\n      location,\r\n      timestamp: new Date().toLocaleString(),\r\n    }\r\n\r\n    setCapturedPhotos((prev) => [...prev, newPhoto])\r\n\r\n    // Focus on new location\r\n    if (mapRef.current && location) {\r\n      mapRef.current.flyToLocation(location)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"map-section\">\r\n        <MapComponent\r\n          ref={mapRef}\r\n          capturedPhotos={capturedPhotos}\r\n          onDeleteLastPhoto={() => setCapturedPhotos((prev) => prev.slice(0, -1))}\r\n          onDeletePhoto={(photoId) => setCapturedPhotos((prev) => prev.filter((photo) => photo.id !== photoId))}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Capture Location & Photo</h2>\r\n        <p>Take a photo to mark your current location on the map</p>\r\n        <CameraComponent onPhotoCapture={handlePhotoCapture} />\r\n        <PhotoGallery\r\n          photos={capturedPhotos}\r\n          onDeletePhoto={(photoId) => setCapturedPhotos((prev) => prev.filter((photo) => photo.id !== photoId))}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ap"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}