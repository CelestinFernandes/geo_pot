{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\CELESTIN\\\\Desktop\\\\geotr\\\\geo_pot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport MapComponent from \"./components/MapComponent\";\nimport CameraComponent from \"./components/CameraComponent\";\nimport PhotoGallery from \"./components/PhotoGallery\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [capturedPhotos, setCapturedPhotos] = useState([]);\n  const mapRef = useRef(null);\n  const handlePhotoCapture = (photoData, location) => {\n    const newPhoto = {\n      id: Date.now(),\n      image: photoData,\n      location: location,\n      timestamp: new Date().toLocaleString()\n    };\n    setCapturedPhotos(prev => [...prev, newPhoto]);\n\n    // Scroll to map + focus on new location\n    if (mapRef.current && location) {\n      mapRef.current.flyToLocation(location);\n    }\n  };\n  const handleDeleteLastPhoto = () => {\n    setCapturedPhotos(prev => prev.slice(0, -1));\n  };\n  const handleDeletePhoto = photoId => {\n    setCapturedPhotos(prev => prev.filter(photo => photo.id !== photoId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: /*#__PURE__*/_jsxDEV(MapComponent, {\n        ref: mapRef,\n        capturedPhotos: capturedPhotos,\n        onDeleteLastPhoto: handleDeleteLastPhoto,\n        onDeletePhoto: handleDeletePhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Capture Location & Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take a photo to mark your current location on the map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CameraComponent, {\n        onPhotoCapture: handlePhotoCapture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhotoGallery, {\n        photos: capturedPhotos,\n        onDeletePhoto: handleDeletePhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sTogp7WcSmd5iJAT4nJRFf8wDlw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useRef","MapComponent","CameraComponent","PhotoGallery","jsxDEV","_jsxDEV","App","capturedPhotos","setCapturedPhotos","mapRef","handlePhotoCapture","photoData","location","newPhoto","id","Date","now","image","timestamp","toLocaleString","prev","current","flyToLocation","handleDeleteLastPhoto","slice","handleDeletePhoto","photoId","filter","photo","className","children","ref","onDeleteLastPhoto","onDeletePhoto","fileName","lineNumber","columnNumber","onPhotoCapture","photos","_c","$RefreshReg$"],"sources":["C:/Users/CELESTIN/Desktop/geotr/geo_pot/src/App.js"],"sourcesContent":["\"use client\"\r\nimport { useState, useRef } from \"react\"\r\nimport MapComponent from \"./components/MapComponent\"\r\nimport CameraComponent from \"./components/CameraComponent\"\r\nimport PhotoGallery from \"./components/PhotoGallery\"\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  const [capturedPhotos, setCapturedPhotos] = useState([])\r\n  const mapRef = useRef(null)\r\n\r\n  const handlePhotoCapture = (photoData, location) => {\r\n    const newPhoto = {\r\n      id: Date.now(),\r\n      image: photoData,\r\n      location: location,\r\n      timestamp: new Date().toLocaleString(),\r\n    }\r\n\r\n    setCapturedPhotos((prev) => [...prev, newPhoto])\r\n\r\n    // Scroll to map + focus on new location\r\n    if (mapRef.current && location) {\r\n      mapRef.current.flyToLocation(location)\r\n    }\r\n  }\r\n\r\n  const handleDeleteLastPhoto = () => {\r\n    setCapturedPhotos((prev) => prev.slice(0, -1))\r\n  }\r\n\r\n  const handleDeletePhoto = (photoId) => {\r\n    setCapturedPhotos((prev) => prev.filter((photo) => photo.id !== photoId))\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"map-section\">\r\n        <MapComponent\r\n          ref={mapRef}\r\n          capturedPhotos={capturedPhotos}\r\n          onDeleteLastPhoto={handleDeleteLastPhoto}\r\n          onDeletePhoto={handleDeletePhoto}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h2>Capture Location & Photo</h2>\r\n        <p>Take a photo to mark your current location on the map</p>\r\n\r\n        <CameraComponent onPhotoCapture={handlePhotoCapture} />\r\n\r\n        <PhotoGallery photos={capturedPhotos} onDeletePhoto={handleDeletePhoto} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}